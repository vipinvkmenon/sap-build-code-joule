{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Create a Full-Stack SAP Fiori Application with Joule in SAP Build Code","text":"<p>SAP Build Code is an application development environment for Java and JavaScript. The turnkey solution combines runtime and design time capabilities with built-in enterprise solution integrations, DevOps, and Application Lifecycle Management. Joule, the AI copilot that understands your business, is available to assist with code generation.</p> <ul> <li>Setup SAP Build Code</li> <li>Create Application with Joule in SAP Build Code</li> </ul>"},{"location":"build-code-app/","title":"Create a Full-Stack SAP Fiori Application with Joule in SAP Build Code","text":"<p>In this tutorial, you will use the Generative AI capabilities of Joule to create a CAP service with SAP Build Code. </p>"},{"location":"build-code-app/#you-will-learn","title":"You will learn","text":"<ul> <li>To leverage the power of Joule in SAP Build Code</li> </ul>"},{"location":"build-code-app/#prerequisites","title":"Prerequisites","text":"<ul> <li>You have an SAP BTP Trial account Get a Free Account on SAP BTP Trial.</li> <li>You have completed the Setup SAP Build Code tutorial. </li> </ul> <p>Check following rolecollections are assigned to your user. If not Assign the role collections</p> <ul> <li>Build Code Administrator </li> <li>Business Application Studio Administrator</li> </ul> <p></p>"},{"location":"build-code-app/#create-a-new-project-using-sap-build-code","title":"Create a New Project Using SAP Build Code","text":"<p>Note This tutorial assumes that you are using an SAP BTP Trial account. If you are using a different account, some steps might be different.</p> <ol> <li>Navigate to the SAP Build lobby.</li> <li> <p>Click Create to start the creation process. </p> </li> <li> <p>Click the Build an Application tile.</p> <p></p> </li> <li> <p>Click the SAP Build Code tile to develop your project in SAP Business Application Studio, the SAP Build Code development environment, leveraging the capabilities of the services included in SAP Build Code.</p> <p></p> </li> <li> <p>Click the Full-Stack Application tile.</p> <p></p> </li> <li> <p>Enter a name for your project.</p> </li> <li> <p>Select the dev space where you want the project to reside.     &gt;SAP Build Code recommends the dev space it deems most suitable, and it will automatically create a new one for you if you don't already have one. If you have other dev spaces of the same type (for example, Full-Stack), you can select between them. If you want to create a different dev space, or a dev space or another type, go to the Dev Space Manager. See Working in the Dev Space Manager.</p> </li> <li> <p>Click Create.</p> <p></p> <p>You can see the project being created in the Project table of the lobby.  </p> <p>The creation of the project may take a few moments.</p> <p></p> </li> <li> <p>After you see a message stating that the project has been created successfully, click the project to open it.</p> <p></p> <p>The project opens in SAP Business Application Studio, the SAP Build Code development environment.</p> <p></p> </li> </ol>"},{"location":"build-code-app/#create-data-entities-with-joule","title":"Create Data Entities with Joule","text":"<p>Let's create an application for a customer loyalty program. The customer can get bonus points by purchasing products and can redeem these points. </p> <p>Note: Joule is a Generative AI assistant that will create code for you. The code might be different every time you trigger the prompt, so the examples shown in the tutorial might not be exactly the same as what you see in your system.</p> <ol> <li> <p>In SAP Business Application Studio, the SAP Build Code development environment, open the digital assistant, Joule, from the activity bar.</p> <p></p> <p>Note: If you do not see the icon, click Additional Views and select Joule from the list. </p> </li> <li> <p>Click Open Guide. </p> </li> <li> <p>Expand the Data Model and Service Creation section, and click Open Joule.</p> <p></p> </li> <li> <p>Copy the prompt below.</p> <pre><code>Design a customer loyalty program application. \nDefine 4 data entities: Customers, Products, Purchases and Redemptions. \nEach customer must have the following fields: name, email, 7-digit customer number, total purchase value, total reward points, total redeemed reward points. \nAll fields for each customer should be integer except name and email that will be stored as string. \nEach product should have a name, description and price. \nPurchases should include the following fields: purchase value, reward points. \nAll fields in Purchases must be integer. \nRedemptions must have 1 field in integer: redeemed amount. \nEach purchase and redemption will be associated to a customer. \nEach purchase will be associated to a product and is called selectedProduct.\n</code></pre> </li> <li> <p>Paste the code in the text field, and click the arrow  to send the prompt to Joule.</p> <p> </p> <p>The code is generated and is displayed below your prompt. </p> </li> <li> <p>Accept the code. </p> <p></p> <p>Depending on the server, it may take a few moments for Joule to create the data models and services for you.</p> <p>Once you accept the code, you will see the update on the right side in the Storyboard tab.</p> <p>Tip: To open the Storyboard, navigate to the Project Explorer, expand your project, and select Storyboard. </p> </li> </ol>"},{"location":"build-code-app/#enhance-the-sample-data-using-joule","title":"Enhance the Sample Data Using Joule","text":"<p>Joule created the CAP data model and the OData service. In addition, Joule created some sample data by default. We will now ask Joule to provide additional sample data.</p> <ol> <li> <p>Open the Sample Data editor in the Storyboard by selecting Open Editor -&gt; Sample Data.</p> <p></p> </li> <li> <p>In the Sample Data Editor, select the Customers data entity, and add 5 more rows. Click Add.</p> <p></p> </li> <li> <p>Click Enhance. This will reopen Joule to modify the sample data. </p> <p></p> </li> <li> <p>Copy the prompt below:</p> <pre><code>Enhance my sample data with meaningful data. Any phone numbers must be 10 digits long. \nAll customer numbers must be 7 digits long and one customer must use the customer number 1200547. \nNo fields may be empty. \nTotal purchase value must be smaller than 10000 not rounded. \nBoth total reward points and total redeemed reward points must not be rounded, must not be identical. and must always sum to one-tenth of the total purchase value for each customer.\n</code></pre> </li> <li> <p>Paste the prompt in the text field, and click the arrow () to send the prompt to Joule.</p> <p> </p> <p>The code is generated and is displayed below your prompt.</p> </li> <li> <p>Accept the code.     This will add the customer names, email addresses, and purchases. </p> <p> </p> </li> </ol>"},{"location":"build-code-app/#create-application-logic-with-joule","title":"Create Application Logic with Joule","text":"<p>We already have created the data model, service, and sample data with Joule. Now we want to create some logic for our service. We would like to calculate the bonus points automatically when a customer makes a purchase. Additionally, we want to provide logic for customers to redeem these bonus points.</p> <ol> <li> <p>In the Storyboard, click on the Purchases entity under Services, and select Open in Graphical Modeler.</p> <p></p> </li> <li> <p>Select the Purchases entity by clicking on the title. Then, click Add Logic.</p> <p></p> <p>If you do not see the entity, click the Show All icon.</p> <p></p> </li> <li> <p>In the Add Application Logic dialog, leave the default values, and click Add.</p> <p></p> <p>The Application Logic Editor opens.</p> </li> <li> <p>In the Standard Event section, select Create. That means that this logic will be automatically executed if an OData create operation is requested.  </p> <p></p> </li> <li> <p>Click Open Code Editor, and select Application Logic. This will open Joule again to allow us to send a prompt to Joule to create the logic for us.</p> <p></p> </li> <li> <p>Copy the prompt below:</p> <pre><code>Reward points of each purchase will be the one tenth of the purchase value. \nEach purchase value will be added to the total purchase value of the related customer. \nEach reward point will be added to the total reward points of the related customer.\n</code></pre> </li> <li> <p>Paste the prompt in the text field, and click the arrow () to send the prompt to Joule.</p> <p></p> <p>So Joule created code that implements the following logic:</p> <ul> <li> <p>Check if the customer exists</p> </li> <li> <p>Calculate the rewardPoints from the purchase value</p> </li> <li> <p>Update the total purchase value and the total reward points in the customers entity</p> </li> </ul> </li> <li> <p>Accept the code. </p> <p></p> <p>Note: Joule typically generates different code each time for the same prompt. If yours is different to what you can see here, that's fine as long as it does the same job.  If there are no obvious errors, just keep working on the exercise. If you  aren't sure, you can ask Joule to try again by clicking Regenerate.  </p> </li> <li> <p>Go back to the <code>service.cds</code> tab. </p> </li> <li> <p>Select the Redemptions entity by clicking on the title. Then, click Add Logic.</p> <p></p> <p>If you do not see the entity, click the Show All icon.  </p> </li> <li> <p>In the Add Application Logic dialog, leave the default values, and click Add.</p> <p></p> </li> <li> <p>In the Standard Event section, select Create.</p> <p></p> </li> <li> <p>Click Open Code Editor, and select Application Logic. This will open Joule again to allow us to send a prompt to Joule to create the logic for us.</p> <p></p> </li> <li> <p>Copy the prompt below::</p> <pre><code>Deduct the redemption amount from the customer's total reward points and add that to their total redeemed points.\n</code></pre> </li> <li> <p>Paste the prompt in the text field, and click the arrow () to send the prompt to Joule.</p> <p></p> </li> <li> <p>Accept the code. </p> <p></p> <p>Have a closer look at the generated code. It even includes some checks to see if the customer has enough points to redeem.</p> <p></p> </li> </ol>"},{"location":"build-code-app/#add-ui-to-the-application","title":"Add UI to the Application","text":"<p>To display and test the content we created for the customer loyalty program, we need to create an SAP Fiori elements UI.</p> <ol> <li> <p>Go to back to the Storyboard and add a UI application.</p> <p></p> </li> <li> <p>We will start with the user interface for the Purchases data entity.      Set the Display name to Purchases and the Description to Manage Purchases, and then click Next.</p> <p></p> </li> <li> <p>We are using the browser, so we will select Template-Based Responsive Application as the UI Application type, and click Next.</p> <p></p> </li> <li> <p>Select List Report Page as the UI application template, and click Next. </p> <p></p> </li> <li> <p>Select Purchases as the Main entity, and click Finish. The page will be created now.</p> <p></p> <p>It might take a few moments for the UI to be created because the dependencies need to be installed. </p> </li> <li> <p>Repeat steps 2 through 5 to create additional UI apps for the Customers and the Redemptions entities.</p> <p>Customer:</p> <ul> <li>Display name: Customers </li> <li>Description: Manage Customers</li> <li>UI Application type: Template-Based Responsive Application </li> <li>UI Application Template: List Report Page </li> <li>Main Entity: Customers </li> </ul> <p>Redemptions:</p> <ul> <li>Display name: Redemptions </li> <li>Description: Manage Redemptions </li> <li>UI Application type: Template-Based Responsive Application </li> <li>UI Application Template: List Report Page </li> <li>Main Entity: Redemptions </li> </ul> <p>And that's it! You've created an application.</p> </li> <li> <p>To preview your application, once the files have been generated, go to the upper-right corner, and click  (Run and Debug).</p> <p></p> <p>The application's preview is displayed.</p> <p></p> </li> <li> <p>Click Go.</p> <p></p> <p>The customer information is displayed.</p> <p></p> </li> <li> <p>From the dropdown list at the top of the page, select Home to go back and preview the other applications.</p> <p></p> </li> </ol>"},{"location":"setup/","title":"Setup SAP Build Code in SAP BTP","text":"<p>SAP Build Code provides generative AI-based code development with Joule copilot, optimized for Java and JavaScript application development. It offers a turn-key environment for coding, testing, integrations, and application lifecycle management.</p> <p>Perform these preparatory steps to set up your system for creating your business applications in SAP Build Code.</p>"},{"location":"setup/#you-will-learn","title":"You will learn","text":"<ul> <li>How to set up your system to start creating business applications in SAP Build Code.   </li> </ul>"},{"location":"setup/#prerequisites","title":"Prerequisites","text":"<ul> <li>You have an SAP BTP Trial account Get a Free Account on SAP BTP Trial</li> </ul>"},{"location":"setup/#run-the-sap-build-code-booster","title":"Run the SAP Build Code Booster","text":"<p>Note This tutorial assumes that you are using an SAP BTP Trial account. If you are using a different account, some steps might be different.</p> <ol> <li> <p>Access your global account and click Go To Your Trial Account.</p> <p></p> </li> <li> <p>In the navigation pane, click Boosters. </p> <p></p> </li> <li> <p>Search for SAP Build Code.</p> <p></p> <p>There is a booster for each of the SAP Build Code service plans. Make sure to select the one relevant to the plan you want to work in.</p> </li> <li> <p>Open the booster to see the overview, components, and additional resources, and click Start.</p> <p></p> <p>The booster checks for required authorizations, compatible providers, and regions, as prerequisites for successful execution.</p> </li> <li> <p>After running the booster, in the popup window, click Navigate to Subaccount.</p> <p></p> </li> </ol>"},{"location":"setup/#verify-subscription","title":"Verify Subscription","text":"<ol> <li> <p>From the navigation pane, select Services &gt; Instances and Subscriptions.</p> <p></p> </li> <li> <p>Make sure you are subscribed to SAP Business Application Studio and to SAP Build Code. </p> <p></p> </li> <li> <p>Click SAP Build Code.</p> <p>The SAP Build lobby opens.</p> <p></p> </li> </ol>"}]}